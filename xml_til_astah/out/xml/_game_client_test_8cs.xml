<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="da">
  <compounddef id="_game_client_test_8cs" kind="file" language="C#">
    <compoundname>GameClientTest.cs</compoundname>
    <innerclass refid="class_game_client_1_1_tests_1_1_game_client_test" prot="public">GameClient::Tests::GameClientTest</innerclass>
    <innernamespace refid="namespace_game_client">GameClient</innernamespace>
    <innernamespace refid="namespace_game_client_1_1_tests">GameClient::Tests</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespace_game_client_1_1_d_t_o" kindref="compound">GameClient.DTO</ref>;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespace_game_client_1_1_services" kindref="compound">GameClient.Services</ref>;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespace_shared_1_1_auth_service" kindref="compound">Shared.AuthService</ref>;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespace_shared_1_1_auth_state" kindref="compound">Shared.AuthState</ref>;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespace_shared_1_1_data" kindref="compound">Shared.Data</ref>;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespace_shared_1_1_tets" kindref="compound">Shared.Tets</ref>;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="namespace_game_client" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_game_client_1_1_tests" kindref="compound">GameClient.Tests</ref>;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="class_game_client_1_1_tests_1_1_game_client_test" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_game_client_1_1_tests_1_1_game_client_test" kindref="compound">GameClientTest</ref><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="class_shared_1_1_tets_1_1_test_client" kindref="compound">TestClient</ref><sp/>client;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="class_game_client_1_1_tests_1_1_game_client_test_1ae8c3cadc6c444308d1cb592011c9262e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_game_client_1_1_tests_1_1_game_client_test_1ae8c3cadc6c444308d1cb592011c9262e" kindref="member">GameClientTest</ref>()<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_shared_1_1_tets_1_1_test_util" kindref="compound">TestUtil</ref>.<ref refid="class_shared_1_1_tets_1_1_test_util_1aed0a2a8aa16d3ec0ce0170a8f719594c" kindref="member">ResetDatabase</ref>();</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>client<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_shared_1_1_tets_1_1_test_client" kindref="compound">TestClient</ref>(SIMON);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>[Fact]</highlight></codeline>
<codeline lineno="19" refid="class_game_client_1_1_tests_1_1_game_client_test_1a450bf7730d5ac3355a5c74adf35db522" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>async<sp/>Task<sp/><ref refid="class_game_client_1_1_tests_1_1_game_client_test_1a450bf7730d5ac3355a5c74adf35db522" kindref="member">Test_Login</ref>()</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Login<sp/>med<sp/>ikke<sp/>admin<sp/>bruger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LoginRequest<sp/>req<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>LoginRequest(</highlight><highlight class="stringliteral">&quot;rune&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;runerune&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LoginResponse<sp/>res<sp/>=<sp/>await<sp/>client.<ref refid="class_shared_1_1_tets_1_1_test_client_1a79d5f70b3a1ba2cf2b2681a87a362b1a" kindref="member">AuthService</ref>.<ref refid="interface_shared_1_1_auth_service_1_1_i_auth_service_1a515f39d912118a8aa4efa8401258e4c6" kindref="member">LoginAsync</ref>(req);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(res.loginSuccessful);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,res.errorReason);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Login<sp/>med<sp/>admin<sp/>bruger<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LoginRequest<sp/>req<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>LoginRequest(</highlight><highlight class="stringliteral">&quot;Bob&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bobersej&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LoginResponse<sp/>res<sp/>=<sp/>await<sp/>client.<ref refid="class_shared_1_1_tets_1_1_test_client_1a79d5f70b3a1ba2cf2b2681a87a362b1a" kindref="member">AuthService</ref>.<ref refid="interface_shared_1_1_auth_service_1_1_i_auth_service_1a515f39d912118a8aa4efa8401258e4c6" kindref="member">LoginAsync</ref>(req);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(res.loginSuccessful);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,res.errorReason);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//login<sp/>med<sp/>rigtig<sp/>brugernavn,<sp/>forkert<sp/>password</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LoginRequest<sp/>req<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>LoginRequest(</highlight><highlight class="stringliteral">&quot;runerune&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;boberikkesej&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LoginResponse<sp/>res<sp/>=<sp/>await<sp/>client.<ref refid="class_shared_1_1_tets_1_1_test_client_1a79d5f70b3a1ba2cf2b2681a87a362b1a" kindref="member">AuthService</ref>.<ref refid="interface_shared_1_1_auth_service_1_1_i_auth_service_1a515f39d912118a8aa4efa8401258e4c6" kindref="member">LoginAsync</ref>(req);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.False(res.loginSuccessful);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>find<sp/>account,<sp/>invalid<sp/>credentials&quot;</highlight><highlight class="normal">,res.errorReason);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//login<sp/>med<sp/>ikke<sp/>registreret<sp/>account<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LoginRequest<sp/>req<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>LoginRequest(</highlight><highlight class="stringliteral">&quot;Marie&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ikkebruger&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LoginResponse<sp/>res<sp/>=<sp/>await<sp/>client.<ref refid="class_shared_1_1_tets_1_1_test_client_1a79d5f70b3a1ba2cf2b2681a87a362b1a" kindref="member">AuthService</ref>.<ref refid="interface_shared_1_1_auth_service_1_1_i_auth_service_1a515f39d912118a8aa4efa8401258e4c6" kindref="member">LoginAsync</ref>(req);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.False(res.loginSuccessful);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>find<sp/>account,<sp/>invalid<sp/>credentials&quot;</highlight><highlight class="normal">,res.errorReason);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//login<sp/>med<sp/>registreret<sp/>bruger<sp/>ikke<sp/>godkendt<sp/>af<sp/>admin<sp/>account<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LoginRequest<sp/>req<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>LoginRequest(</highlight><highlight class="stringliteral">&quot;Sundar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sundar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LoginResponse<sp/>res<sp/>=<sp/>await<sp/>client.<ref refid="class_shared_1_1_tets_1_1_test_client_1a79d5f70b3a1ba2cf2b2681a87a362b1a" kindref="member">AuthService</ref>.<ref refid="interface_shared_1_1_auth_service_1_1_i_auth_service_1a515f39d912118a8aa4efa8401258e4c6" kindref="member">LoginAsync</ref>(req);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.False(res.loginSuccessful);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(</highlight><highlight class="stringliteral">&quot;Account<sp/>awaiting<sp/>admin<sp/>approval&quot;</highlight><highlight class="normal">,res.errorReason);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//login<sp/>med<sp/>registreret<sp/>bruger<sp/>ikke<sp/>godkendt<sp/>af<sp/>admin<sp/>account<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LoginRequest<sp/>req<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>LoginRequest(</highlight><highlight class="stringliteral">&quot;ToBeDeleted&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ToBeDeleted&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LoginResponse<sp/>res<sp/>=<sp/>await<sp/>client.<ref refid="class_shared_1_1_tets_1_1_test_client_1a79d5f70b3a1ba2cf2b2681a87a362b1a" kindref="member">AuthService</ref>.<ref refid="interface_shared_1_1_auth_service_1_1_i_auth_service_1a515f39d912118a8aa4efa8401258e4c6" kindref="member">LoginAsync</ref>(req);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.False(res.loginSuccessful);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(</highlight><highlight class="stringliteral">&quot;Account<sp/>is<sp/>no<sp/>longer<sp/>active&quot;</highlight><highlight class="normal">,res.errorReason);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>[Fact]</highlight></codeline>
<codeline lineno="68" refid="class_game_client_1_1_tests_1_1_game_client_test_1ac2ee98eec1088666b2e2efb4ddde65fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>async<sp/>Task<sp/><ref refid="class_game_client_1_1_tests_1_1_game_client_test_1ac2ee98eec1088666b2e2efb4ddde65fb" kindref="member">Test_register</ref>()</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RegisterRequest<sp/>req<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>RegisterRequest(</highlight><highlight class="stringliteral">&quot;BenDover&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;firstName&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;lastName&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;email&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;password&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RegisterResponse<sp/>res<sp/>=<sp/>await<sp/>client.<ref refid="class_shared_1_1_tets_1_1_test_client_1a79d5f70b3a1ba2cf2b2681a87a362b1a" kindref="member">AuthService</ref>.<ref refid="interface_shared_1_1_auth_service_1_1_i_auth_service_1a02db9f05d0156df0007187361c817e7b" kindref="member">RegisterAsync</ref>(req);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.False(res.response);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(</highlight><highlight class="stringliteral">&quot;Username<sp/>Already<sp/>taken&quot;</highlight><highlight class="normal">,res.errorReason);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RegisterRequest<sp/>req<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>RegisterRequest(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RegisterResponse<sp/>res<sp/>=<sp/>await<sp/>client.<ref refid="class_shared_1_1_tets_1_1_test_client_1a79d5f70b3a1ba2cf2b2681a87a362b1a" kindref="member">AuthService</ref>.<ref refid="interface_shared_1_1_auth_service_1_1_i_auth_service_1a02db9f05d0156df0007187361c817e7b" kindref="member">RegisterAsync</ref>(req);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.False(res.response);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(</highlight><highlight class="stringliteral">&quot;No<sp/>parameters<sp/>can<sp/>be<sp/>empty&quot;</highlight><highlight class="normal">,res.errorReason);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RegisterRequest<sp/>req<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>RegisterRequest(</highlight><highlight class="stringliteral">&quot;username&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;firstName&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;lastName&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;email&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;password&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RegisterResponse<sp/>res<sp/>=<sp/>await<sp/>client.<ref refid="class_shared_1_1_tets_1_1_test_client_1a79d5f70b3a1ba2cf2b2681a87a362b1a" kindref="member">AuthService</ref>.<ref refid="interface_shared_1_1_auth_service_1_1_i_auth_service_1a02db9f05d0156df0007187361c817e7b" kindref="member">RegisterAsync</ref>(req);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(res.response);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,res.errorReason);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>[Fact]</highlight></codeline>
<codeline lineno="92" refid="class_game_client_1_1_tests_1_1_game_client_test_1a26dbeb4d8b05422fa3848bddcead1d3a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_game_client_1_1_tests_1_1_game_client_test_1a26dbeb4d8b05422fa3848bddcead1d3a" kindref="member">Test_GetGames</ref>()<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>res<sp/>=<sp/>client.<ref refid="class_shared_1_1_tets_1_1_test_client_1acb1c0994b766d9c7f0c7c3ba581d2af5" kindref="member">GameService</ref>.<ref refid="interface_game_client_1_1_services_1_1_i_game_service_1a0f36301c5139d11d1e0b47f42f36e9a5" kindref="member">GetGamesAsync</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal">()).Result;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>games<sp/>=<sp/>res.games;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(2,<sp/>games.Count);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>[Fact]</highlight></codeline>
<codeline lineno="99" refid="class_game_client_1_1_tests_1_1_game_client_test_1a365135ff20cf688032ec134d722b766b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_game_client_1_1_tests_1_1_game_client_test_1a365135ff20cf688032ec134d722b766b" kindref="member">Test_CreateMatch_GetMatch</ref>()<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>matchId;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>res<sp/>=<sp/>client.<ref refid="class_shared_1_1_tets_1_1_test_client_1acb1c0994b766d9c7f0c7c3ba581d2af5" kindref="member">GameService</ref>.<ref refid="interface_game_client_1_1_services_1_1_i_game_service_1ad898319936905e7bcbd56dd12455c5ae" kindref="member">CreateMatchAsync</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal">(TICTACTOE_ID)).Result;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(res.errorReason,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.NotEqual(res.match.MatchId,<sp/>0);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matchId<sp/>=<sp/>res.match.MatchId;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>res<sp/>=<sp/>client.<ref refid="class_shared_1_1_tets_1_1_test_client_1acb1c0994b766d9c7f0c7c3ba581d2af5" kindref="member">GameService</ref>.<ref refid="interface_game_client_1_1_services_1_1_i_game_service_1ab0eff4d18f750e3bc684b07937501b00" kindref="member">GetMatchAsync</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal">(matchId)).Result;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>m<sp/>=<sp/>res.match;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(m.MatchId,<sp/>matchId);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(m.GameId,<sp/>TICTACTOE_ID);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(m.OwnerId,<sp/>SIMON_ID);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(m.Participants.Count,<sp/>1);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(m.Participants[0].AccountId,<sp/>SIMON_ID);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(m.Participants[0].Status,<sp/><ref refid="class_game_client_1_1_d_t_o_1_1_participant" kindref="compound">Participant</ref>.<ref refid="class_game_client_1_1_d_t_o_1_1_participant_1a8b8dacace3843a0ec327e33fcddda72d" kindref="member">STATUS_ACCEPTED</ref>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>[Fact]</highlight></codeline>
<codeline lineno="123" refid="class_game_client_1_1_tests_1_1_game_client_test_1a506757660f184b694723d9af1ccbefbe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_game_client_1_1_tests_1_1_game_client_test_1a506757660f184b694723d9af1ccbefbe" kindref="member">Test_CreateMatch_GameNotFound</ref>()<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>res<sp/>=<sp/>client.<ref refid="class_shared_1_1_tets_1_1_test_client_1acb1c0994b766d9c7f0c7c3ba581d2af5" kindref="member">GameService</ref>.<ref refid="interface_game_client_1_1_services_1_1_i_game_service_1ad898319936905e7bcbd56dd12455c5ae" kindref="member">CreateMatchAsync</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal">(93718239)).Result;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(res.match.MatchId,<sp/>0);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(res.errorReason,<sp/></highlight><highlight class="stringliteral">&quot;Game<sp/>id<sp/>93718239<sp/>not<sp/>found.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>[Fact]</highlight></codeline>
<codeline lineno="130" refid="class_game_client_1_1_tests_1_1_game_client_test_1ad327d01382fb5f778d909a8db3beb1a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>async<sp/>Task<sp/><ref refid="class_game_client_1_1_tests_1_1_game_client_test_1ad327d01382fb5f778d909a8db3beb1a3" kindref="member">Test_GetMyMatches</ref>()<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>client.<ref refid="class_shared_1_1_tets_1_1_test_client_1acb1c0994b766d9c7f0c7c3ba581d2af5" kindref="member">GameService</ref>.<ref refid="interface_game_client_1_1_services_1_1_i_game_service_1ad898319936905e7bcbd56dd12455c5ae" kindref="member">CreateMatchAsync</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal">(TICTACTOE_ID));</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>client.<ref refid="class_shared_1_1_tets_1_1_test_client_1acb1c0994b766d9c7f0c7c3ba581d2af5" kindref="member">GameService</ref>.<ref refid="interface_game_client_1_1_services_1_1_i_game_service_1ad898319936905e7bcbd56dd12455c5ae" kindref="member">CreateMatchAsync</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal">(TICTACTOE_ID));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>client.<ref refid="class_shared_1_1_tets_1_1_test_client_1acb1c0994b766d9c7f0c7c3ba581d2af5" kindref="member">GameService</ref>.<ref refid="interface_game_client_1_1_services_1_1_i_game_service_1ad898319936905e7bcbd56dd12455c5ae" kindref="member">CreateMatchAsync</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal">(TICTACTOE_ID));</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>res<sp/>=<sp/>await<sp/>client.<ref refid="class_shared_1_1_tets_1_1_test_client_1acb1c0994b766d9c7f0c7c3ba581d2af5" kindref="member">GameService</ref>.<ref refid="interface_game_client_1_1_services_1_1_i_game_service_1ad7452790f78e64d306aff81b3ebef841" kindref="member">GetMyMatchesAsync</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal">());</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(3,<sp/>res.matches.Count);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>[Fact]</highlight></codeline>
<codeline lineno="141" refid="class_game_client_1_1_tests_1_1_game_client_test_1aa707311778df64ab50624ec17f6d5452" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>async<sp/>Task<sp/><ref refid="class_game_client_1_1_tests_1_1_game_client_test_1aa707311778df64ab50624ec17f6d5452" kindref="member">Test_AddParticipant_GetParticipants</ref>()<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>matchId;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_game_client_1_1_d_t_o_1_1_match" kindref="compound">Match</ref><sp/>before;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_game_client_1_1_d_t_o_1_1_match" kindref="compound">Match</ref><sp/>after;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>match.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>res<sp/>=<sp/>await<sp/>client.<ref refid="class_shared_1_1_tets_1_1_test_client_1acb1c0994b766d9c7f0c7c3ba581d2af5" kindref="member">GameService</ref>.<ref refid="interface_game_client_1_1_services_1_1_i_game_service_1ad898319936905e7bcbd56dd12455c5ae" kindref="member">CreateMatchAsync</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal">(TICTACTOE_ID));</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>m<sp/>=<sp/>res.match;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matchId<sp/>=<sp/>m.MatchId;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>match<sp/>before<sp/>add<sp/>participant.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>res<sp/>=<sp/>await<sp/>client.<ref refid="class_shared_1_1_tets_1_1_test_client_1acb1c0994b766d9c7f0c7c3ba581d2af5" kindref="member">GameService</ref>.<ref refid="interface_game_client_1_1_services_1_1_i_game_service_1ab0eff4d18f750e3bc684b07937501b00" kindref="member">GetMatchAsync</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal">(matchId));</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>before<sp/>=<sp/>res.match;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>participant.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>res<sp/>=<sp/>await<sp/>client.<ref refid="class_shared_1_1_tets_1_1_test_client_1acb1c0994b766d9c7f0c7c3ba581d2af5" kindref="member">GameService</ref>.<ref refid="interface_game_client_1_1_services_1_1_i_game_service_1a0b799b8dc3bfaa47d0c67409a051070c" kindref="member">AddParticipantAsync</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal">(matchId,<sp/>RUNE_ID));</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>match<sp/>after<sp/>add<sp/>participant.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>res<sp/>=<sp/>await<sp/>client.<ref refid="class_shared_1_1_tets_1_1_test_client_1acb1c0994b766d9c7f0c7c3ba581d2af5" kindref="member">GameService</ref>.<ref refid="interface_game_client_1_1_services_1_1_i_game_service_1ab0eff4d18f750e3bc684b07937501b00" kindref="member">GetMatchAsync</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal">(matchId));</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>after<sp/>=<sp/>res.match;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(before.<ref refid="class_game_client_1_1_d_t_o_1_1_match_1af86f75c69303da2af893ac6940d6292e" kindref="member">Participants</ref>.Count,<sp/>1);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(after.<ref refid="class_game_client_1_1_d_t_o_1_1_match_1af86f75c69303da2af893ac6940d6292e" kindref="member">Participants</ref>.Count,<sp/>2);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(after.<ref refid="class_game_client_1_1_d_t_o_1_1_match_1af86f75c69303da2af893ac6940d6292e" kindref="member">Participants</ref>[0].Status,<sp/><ref refid="class_game_client_1_1_d_t_o_1_1_participant" kindref="compound">Participant</ref>.<ref refid="class_game_client_1_1_d_t_o_1_1_participant_1a8b8dacace3843a0ec327e33fcddda72d" kindref="member">STATUS_ACCEPTED</ref>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(after.<ref refid="class_game_client_1_1_d_t_o_1_1_match_1af86f75c69303da2af893ac6940d6292e" kindref="member">Participants</ref>[1].Status,<sp/><ref refid="class_game_client_1_1_d_t_o_1_1_participant" kindref="compound">Participant</ref>.<ref refid="class_game_client_1_1_d_t_o_1_1_participant_1a9212183c6469936459bd2df080a4b7f8" kindref="member">STATUS_PENDING</ref>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(after.<ref refid="class_game_client_1_1_d_t_o_1_1_match_1af86f75c69303da2af893ac6940d6292e" kindref="member">Participants</ref>[0].AccountId,<sp/>SIMON_ID);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(after.<ref refid="class_game_client_1_1_d_t_o_1_1_match_1af86f75c69303da2af893ac6940d6292e" kindref="member">Participants</ref>[1].AccountId,<sp/>RUNE_ID);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>[Fact]</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>async<sp/>Task<sp/>Test_AddParticipant_InviteSelf()<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>matchId;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>match.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>res<sp/>=<sp/>await<sp/>client.<ref refid="class_shared_1_1_tets_1_1_test_client_1acb1c0994b766d9c7f0c7c3ba581d2af5" kindref="member">GameService</ref>.<ref refid="interface_game_client_1_1_services_1_1_i_game_service_1ad898319936905e7bcbd56dd12455c5ae" kindref="member">CreateMatchAsync</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal">(TICTACTOE_ID));</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>m<sp/>=<sp/>res.match;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matchId<sp/>=<sp/>m.MatchId;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>participant.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>res<sp/>=<sp/>await<sp/>client.<ref refid="class_shared_1_1_tets_1_1_test_client_1acb1c0994b766d9c7f0c7c3ba581d2af5" kindref="member">GameService</ref>.<ref refid="interface_game_client_1_1_services_1_1_i_game_service_1a0b799b8dc3bfaa47d0c67409a051070c" kindref="member">AddParticipantAsync</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal">(matchId,<sp/>SIMON_ID));</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(res.errorReason,<sp/></highlight><highlight class="stringliteral">&quot;Account<sp/>id<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>SIMON_ID<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>already<sp/>invited.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(rune):<sp/>Test_GetPending</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(rune):<sp/>Test_DecidePending</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>[Fact]</highlight></codeline>
<codeline lineno="199" refid="class_game_client_1_1_tests_1_1_game_client_test_1a20110e14ade995c264474cf7d0784c8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_game_client_1_1_tests_1_1_game_client_test_1a20110e14ade995c264474cf7d0784c8b" kindref="member">Test_GetAccount</ref>()<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>req<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GetAccountRequest(1);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>res<sp/>=<sp/>client.<ref refid="class_shared_1_1_tets_1_1_test_client_1acb1c0994b766d9c7f0c7c3ba581d2af5" kindref="member">GameService</ref>.<ref refid="interface_game_client_1_1_services_1_1_i_game_service_1aae00f69db1f98e63ccf1bd0ae74c354b" kindref="member">GetAccountAsync</ref>(req).Result;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>account<sp/>=<sp/>res.account;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(1,<sp/>account.AccountId);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>[Fact]</highlight></codeline>
<codeline lineno="207" refid="class_game_client_1_1_tests_1_1_game_client_test_1add7648f2e8d28e18ddab8c55b44746f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_game_client_1_1_tests_1_1_game_client_test_1add7648f2e8d28e18ddab8c55b44746f5" kindref="member">Test_GetNonExistentAccount</ref>()</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>req<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GetAccountRequest(999);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>res<sp/>=<sp/>client.<ref refid="class_shared_1_1_tets_1_1_test_client_1acb1c0994b766d9c7f0c7c3ba581d2af5" kindref="member">GameService</ref>.<ref refid="interface_game_client_1_1_services_1_1_i_game_service_1aae00f69db1f98e63ccf1bd0ae74c354b" kindref="member">GetAccountAsync</ref>(req).Result;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>account<sp/>=<sp/>res.account;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(0,<sp/>account.AccountId);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(</highlight><highlight class="stringliteral">&quot;?&quot;</highlight><highlight class="normal">,<sp/>account.Username);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>[Fact]</highlight></codeline>
<codeline lineno="217" refid="class_game_client_1_1_tests_1_1_game_client_test_1a50752599fd3ab1a1bef1266a5611d119" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_game_client_1_1_tests_1_1_game_client_test_1a50752599fd3ab1a1bef1266a5611d119" kindref="member">Test_GetAccounts</ref>()</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>req<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GetAccountsRequest();</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>res<sp/>=<sp/>client.<ref refid="class_shared_1_1_tets_1_1_test_client_1acb1c0994b766d9c7f0c7c3ba581d2af5" kindref="member">GameService</ref>.<ref refid="interface_game_client_1_1_services_1_1_i_game_service_1a757919cddb46ae6a93590e850ffed3fa" kindref="member">GetAccountsAsync</ref>(req).Result;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>accounts<sp/>=<sp/>res.accounts.OrderBy(x<sp/>=&gt;<sp/>x.AccountId).ToList();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(5,<sp/>accounts.Count);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(SIMON_ID,<sp/>accounts[2].AccountId);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>[Fact]</highlight></codeline>
<codeline lineno="227" refid="class_game_client_1_1_tests_1_1_game_client_test_1ad713931884818e8b45ae24a1ffb5a8a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_game_client_1_1_tests_1_1_game_client_test_1ad713931884818e8b45ae24a1ffb5a8a5" kindref="member">Test_UpdateAccount</ref>()</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>req<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GetAccountRequest(SIMON_ID);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>res<sp/>=<sp/>client.<ref refid="class_shared_1_1_tets_1_1_test_client_1acb1c0994b766d9c7f0c7c3ba581d2af5" kindref="member">GameService</ref>.<ref refid="interface_game_client_1_1_services_1_1_i_game_service_1aae00f69db1f98e63ccf1bd0ae74c354b" kindref="member">GetAccountAsync</ref>(req).Result;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>bimon<sp/>=<sp/>res.account;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(</highlight><highlight class="stringliteral">&quot;Banh&quot;</highlight><highlight class="normal">,<sp/>bimon.LastName);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bimon.LastName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Mai&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>upReq<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>UpdateAccountRequest(bimon);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>upRes<sp/>=<sp/>client.<ref refid="class_shared_1_1_tets_1_1_test_client_1acb1c0994b766d9c7f0c7c3ba581d2af5" kindref="member">GameService</ref>.<ref refid="interface_game_client_1_1_services_1_1_i_game_service_1af8e26f8d08854063334c45d69e5f3115" kindref="member">UpdateAccountAsync</ref>(upReq).Result;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>upRes.errorReason);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>uppedReq<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GetAccountRequest(SIMON_ID);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>uppedRes<sp/>=<sp/>client.<ref refid="class_shared_1_1_tets_1_1_test_client_1acb1c0994b766d9c7f0c7c3ba581d2af5" kindref="member">GameService</ref>.<ref refid="interface_game_client_1_1_services_1_1_i_game_service_1aae00f69db1f98e63ccf1bd0ae74c354b" kindref="member">GetAccountAsync</ref>(uppedReq).Result;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>uppedBimon<sp/>=<sp/>uppedRes.account;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(</highlight><highlight class="stringliteral">&quot;Mai&quot;</highlight><highlight class="normal">,<sp/>uppedBimon.LastName);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(rune):<sp/>Test_Move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(rune):<sp/>Test_GetScoreSums</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(rune):<sp/>Test_GetMatchHistory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="W:/SEP3/CSharp/Boardgames/GameClient.Tests/GameClientTest.cs"/>
  </compounddef>
</doxygen>
