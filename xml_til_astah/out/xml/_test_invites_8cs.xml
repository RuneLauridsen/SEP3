<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="da">
  <compounddef id="_test_invites_8cs" kind="file" language="C#">
    <compoundname>TestInvites.cs</compoundname>
    <innerclass refid="class_game_client_1_1_tests_1_1_test_invites" prot="public">GameClient::Tests::TestInvites</innerclass>
    <innernamespace refid="namespace_game_client">GameClient</innernamespace>
    <innernamespace refid="namespace_game_client_1_1_tests">GameClient::Tests</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespace_game_client_1_1_d_t_o" kindref="compound">GameClient.DTO</ref>;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespace_shared_1_1_tets" kindref="compound">Shared.Tets</ref>;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_game_client_1_1_tests" kindref="compound">GameClient.Tests</ref>;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="class_game_client_1_1_tests_1_1_test_invites" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_game_client_1_1_tests_1_1_test_invites" kindref="compound">TestInvites</ref><sp/><sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="class_shared_1_1_tets_1_1_test_client" kindref="compound">TestClient</ref><sp/>simon;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="class_shared_1_1_tets_1_1_test_client" kindref="compound">TestClient</ref><sp/>maja;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>matchId;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>participantId;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="class_game_client_1_1_tests_1_1_test_invites_1a3c755e1a5c370affaa082696cf9b6df5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_game_client_1_1_tests_1_1_test_invites_1a3c755e1a5c370affaa082696cf9b6df5" kindref="member">TestInvites</ref>()<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_shared_1_1_tets_1_1_test_util" kindref="compound">TestUtil</ref>.<ref refid="class_shared_1_1_tets_1_1_test_util_1aed0a2a8aa16d3ec0ce0170a8f719594c" kindref="member">ResetDatabase</ref>();</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simon<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_shared_1_1_tets_1_1_test_client" kindref="compound">TestClient</ref>(SIMON);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maja<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_shared_1_1_tets_1_1_test_client" kindref="compound">TestClient</ref>(MAJA);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matchId<sp/>=<sp/>simon.<ref refid="class_shared_1_1_tets_1_1_test_client_1acb1c0994b766d9c7f0c7c3ba581d2af5" kindref="member">GameService</ref>.CreateMatchAsync(</highlight><highlight class="keyword">new</highlight><highlight class="normal">(TICTACTOE_ID)).Result.match.MatchId;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>participantId<sp/>=<sp/>simon.<ref refid="class_shared_1_1_tets_1_1_test_client_1acb1c0994b766d9c7f0c7c3ba581d2af5" kindref="member">GameService</ref>.AddParticipantAsync(</highlight><highlight class="keyword">new</highlight><highlight class="normal">(matchId,<sp/>MAJA_ID)).Result.participant.ParticipantId;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>[Fact]</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>async<sp/>Task<sp/>Test_AcceptInvite()<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>Test_CheckBeforeAfterDecide(<ref refid="class_game_client_1_1_d_t_o_1_1_participant" kindref="compound">Participant</ref>.<ref refid="class_game_client_1_1_d_t_o_1_1_participant_1a8b8dacace3843a0ec327e33fcddda72d" kindref="member">STATUS_ACCEPTED</ref>,<sp/>0,<sp/><ref refid="class_game_client_1_1_d_t_o_1_1_match" kindref="compound">Match</ref>.<ref refid="class_game_client_1_1_d_t_o_1_1_match_1af33a9628657cfc065b2e40abbd2073fc" kindref="member">STATUS_ONGOING</ref>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>[Fact]</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>async<sp/>Task<sp/>Test_RejectInvite()<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>Test_CheckBeforeAfterDecide(<ref refid="class_game_client_1_1_d_t_o_1_1_participant" kindref="compound">Participant</ref>.<ref refid="class_game_client_1_1_d_t_o_1_1_participant_1aaf455c88a79d57196f9cb5452585ecc0" kindref="member">STATUS_REJECTED</ref>,<sp/>0,<sp/><ref refid="class_game_client_1_1_d_t_o_1_1_match" kindref="compound">Match</ref>.<ref refid="class_game_client_1_1_d_t_o_1_1_match_1a1caaae17193aa226498538dcd390d370" kindref="member">STATUS_PENDING</ref>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>async<sp/>Task<sp/>Test_CheckBeforeAfterDecide(</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>decideStatus,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>expectPendingCountAfter,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>expectMatchStatusAfter</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Before<sp/>decide,<sp/>check<sp/>pending.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>res<sp/>=<sp/>await<sp/>maja.<ref refid="class_shared_1_1_tets_1_1_test_client_1acb1c0994b766d9c7f0c7c3ba581d2af5" kindref="member">GameService</ref>.GetPendingAsync(</highlight><highlight class="keyword">new</highlight><highlight class="normal">());</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(res.participants.Count,<sp/>1);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(res.participants[0].Status,<sp/><ref refid="class_game_client_1_1_d_t_o_1_1_participant" kindref="compound">Participant</ref>.<ref refid="class_game_client_1_1_d_t_o_1_1_participant_1a9212183c6469936459bd2df080a4b7f8" kindref="member">STATUS_PENDING</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(res.participants[0].ParticipantId,<sp/>participantId);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Before<sp/>decide,<sp/>check<sp/>match.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>res<sp/>=<sp/>await<sp/>maja.<ref refid="class_shared_1_1_tets_1_1_test_client_1acb1c0994b766d9c7f0c7c3ba581d2af5" kindref="member">GameService</ref>.GetMatchAsync(</highlight><highlight class="keyword">new</highlight><highlight class="normal">(matchId));</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(res.match.Status,<sp/><ref refid="class_game_client_1_1_d_t_o_1_1_match" kindref="compound">Match</ref>.<ref refid="class_game_client_1_1_d_t_o_1_1_match_1a1caaae17193aa226498538dcd390d370" kindref="member">STATUS_PENDING</ref>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Decide.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>res<sp/>=<sp/>await<sp/>maja.<ref refid="class_shared_1_1_tets_1_1_test_client_1acb1c0994b766d9c7f0c7c3ba581d2af5" kindref="member">GameService</ref>.DecidePendingAsync(</highlight><highlight class="keyword">new</highlight><highlight class="normal">(matchId,<sp/>participantId,<sp/>decideStatus));</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(res.errorReason,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>After<sp/>decide,<sp/>check<sp/>pending.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>res<sp/>=<sp/>await<sp/>maja.<ref refid="class_shared_1_1_tets_1_1_test_client_1acb1c0994b766d9c7f0c7c3ba581d2af5" kindref="member">GameService</ref>.GetPendingAsync(</highlight><highlight class="keyword">new</highlight><highlight class="normal">());</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(res.participants.Count,<sp/>expectPendingCountAfter);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>After<sp/>decide,<sp/>check<sp/>match.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>res<sp/>=<sp/>await<sp/>maja.<ref refid="class_shared_1_1_tets_1_1_test_client_1acb1c0994b766d9c7f0c7c3ba581d2af5" kindref="member">GameService</ref>.GetMatchAsync(</highlight><highlight class="keyword">new</highlight><highlight class="normal">(matchId));</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(res.match.Status,<sp/>expectMatchStatusAfter);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="W:/SEP3/CSharp/Boardgames/GameClient.Tests/TestInvites.cs"/>
  </compounddef>
</doxygen>
