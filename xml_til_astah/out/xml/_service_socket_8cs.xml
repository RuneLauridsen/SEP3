<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="da">
  <compounddef id="_service_socket_8cs" kind="file" language="C#">
    <compoundname>ServiceSocket.cs</compoundname>
    <innerclass refid="class_shared_1_1_data_1_1_service_socket" prot="public">Shared::Data::ServiceSocket</innerclass>
    <innerclass refid="class_shared_1_1_data_1_1_network_exception" prot="public">Shared::Data::NetworkException</innerclass>
    <innernamespace refid="namespace_shared">Shared</innernamespace>
    <innernamespace refid="namespace_shared_1_1_data">Shared::Data</innernamespace>
    <innernamespace refid="namespace_system_1_1_net_1_1_sockets">System::Net::Sockets</innernamespace>
    <innernamespace refid="namespace_system_1_1_runtime_1_1_compiler_services">System::Runtime::CompilerServices</innernamespace>
    <innernamespace refid="namespace_system_1_1_text">System::Text</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using<sp/></highlight><highlight class="normal">System.Net.Sockets;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">System.Runtime.CompilerServices;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">System.Text;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespace_game_client" kindref="compound">GameClient</ref>;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespace_game_client_1_1_data" kindref="compound">GameClient.Data</ref>;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespace_shared_1_1_auth_service" kindref="compound">Shared.AuthService</ref>;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespace_shared_1_1_auth_state" kindref="compound">Shared.AuthState</ref>;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_shared_1_1_data" kindref="compound">Shared.Data</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="class_shared_1_1_data_1_1_service_socket" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_shared_1_1_data_1_1_service_socket" kindref="compound">ServiceSocket</ref><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>readonly<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>_url;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>readonly<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_port;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>readonly<sp/><ref refid="interface_shared_1_1_auth_state_1_1_i_auth_state" kindref="compound">IAuthState</ref><sp/>_authState;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>readonly<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_blocking;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Socket?<sp/>_socket;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>NetworkStream?<sp/>_stream;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="class_shared_1_1_data_1_1_service_socket_1ac236ced48a915e14829039e199843bd6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_shared_1_1_data_1_1_service_socket_1ac236ced48a915e14829039e199843bd6" kindref="member">ServiceSocket</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>url,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>port,<sp/><ref refid="interface_shared_1_1_auth_state_1_1_i_auth_state" kindref="compound">IAuthState</ref><sp/>authState)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_url<sp/>=<sp/>url;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_port<sp/>=<sp/>port;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_authState<sp/>=<sp/>authState;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="class_shared_1_1_data_1_1_service_socket_1a157a472beb8cc05aa9b3af3784601b07" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>async<sp/>Task<sp/><ref refid="class_shared_1_1_data_1_1_service_socket_1a157a472beb8cc05aa9b3af3784601b07" kindref="member">Open</ref>()<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_socket<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Socket(SocketType.Stream,<sp/>ProtocolType.Tcp);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>_socket.ConnectAsync(_url,<sp/>_port);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_stream<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>NetworkStream(_socket);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="class_shared_1_1_data_1_1_service_socket_1a79cc6032e20a1ba2cc01a97a3345cba8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_shared_1_1_data_1_1_service_socket_1a79cc6032e20a1ba2cc01a97a3345cba8" kindref="member">Close</ref>()<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_stream?.Close();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_socket?.Close();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_stream?.Dispose();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_socket?.Dispose();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="class_shared_1_1_data_1_1_service_socket_1a973877fd60c8001a6c11a84e9cf41109" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>async<sp/>Task<sp/><ref refid="class_shared_1_1_data_1_1_service_socket_1a973877fd60c8001a6c11a84e9cf41109" kindref="member">SendMessageAsync</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>body,<sp/>CancellationToken<sp/>ct)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>jwt<sp/>=<sp/>await<sp/>_authState.GetJwtAsync();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_shared_1_1_message" kindref="compound">Message</ref><sp/>m<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_shared_1_1_message" kindref="compound">Message</ref>(body,<sp/>jwt);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>s<sp/>=<sp/>MessageSerializer.Serialize(m);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>StringStreamer.SendStringAsync(_stream,<sp/>s,<sp/>ct);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="class_shared_1_1_data_1_1_service_socket_1adb235456ebdbc0b88e1c9253c1b25599" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>async<sp/>Task&lt;Message&gt;<sp/><ref refid="class_shared_1_1_data_1_1_service_socket_1adb235456ebdbc0b88e1c9253c1b25599" kindref="member">ReadMessageAsync</ref>(CancellationToken<sp/>ct)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>s<sp/>=<sp/>await<sp/>StringStreamer.ReadStringAsync(_stream,<sp/>ct);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_shared_1_1_message" kindref="compound">Message</ref><sp/>m<sp/>=<sp/>MessageSerializer.Deserialize(s);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="class_shared_1_1_data_1_1_service_socket_1a26be6546dc82632ddc7162d04a4651d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Task&lt;T?&gt;<sp/><ref refid="class_shared_1_1_data_1_1_service_socket_1a26be6546dc82632ddc7162d04a4651d5" kindref="member">SendAndReceiveAsync&lt;T&gt;</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>requestBody)<sp/>where<sp/>T<sp/>:<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_shared_1_1_data_1_1_service_socket_1a26be6546dc82632ddc7162d04a4651d5" kindref="member">SendAndReceiveAsync&lt;T&gt;</ref>(requestBody,<sp/>CancellationToken.None);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="class_shared_1_1_data_1_1_service_socket_1a48943a8611e55daffe34de5d6898a852" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>async<sp/>Task&lt;T?&gt;<sp/><ref refid="class_shared_1_1_data_1_1_service_socket_1a26be6546dc82632ddc7162d04a4651d5" kindref="member">SendAndReceiveAsync&lt;T&gt;</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>requestBody,<sp/>CancellationToken<sp/>ct)<sp/>where<sp/>T<sp/>:<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/><ref refid="class_shared_1_1_data_1_1_service_socket_1a157a472beb8cc05aa9b3af3784601b07" kindref="member">Open</ref>();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tickBegin<sp/>=<sp/>DateTime.Now.Ticks;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/><ref refid="class_shared_1_1_data_1_1_service_socket_1a973877fd60c8001a6c11a84e9cf41109" kindref="member">SendMessageAsync</ref>(requestBody,<sp/>ct);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_shared_1_1_message" kindref="compound">Message</ref><sp/>response<sp/>=<sp/>await<sp/><ref refid="class_shared_1_1_data_1_1_service_socket_1adb235456ebdbc0b88e1c9253c1b25599" kindref="member">ReadMessageAsync</ref>(ct);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tickEnd<sp/>=<sp/>DateTime.Now.Ticks;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tickDiff<sp/>=<sp/>tickEnd<sp/>-<sp/>tickBegin;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>elapsedClientMillis<sp/>=<sp/>(double)tickDiff<sp/>/<sp/>TimeSpan.TicksPerMillisecond;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogSendAndReceive(requestBody,<sp/>response.<ref refid="class_shared_1_1_message_1a163ce4d2dcdb57321747fb9c91f4a81e" kindref="member">Body</ref>,<sp/>elapsedClientMillis,<sp/>response.<ref refid="class_shared_1_1_message_1ad4bb95b3c5c03a7681c3f17281d7a08e" kindref="member">Head</ref>.elapsedServerMillis);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(response.<ref refid="class_shared_1_1_message_1a163ce4d2dcdb57321747fb9c91f4a81e" kindref="member">Body</ref><sp/>is<sp/>NotAuthorizedResponse)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_game_client_1_1_data_1_1_not_authorized_exception" kindref="compound">NotAuthorizedException</ref>();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(response.<ref refid="class_shared_1_1_message_1a163ce4d2dcdb57321747fb9c91f4a81e" kindref="member">Body</ref><sp/>is<sp/>not<sp/>T<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Exception(</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$</highlight><highlight class="stringliteral">&quot;Unexpected<sp/>response<sp/>type<sp/>from<sp/>logic<sp/>server.<sp/>Got<sp/>&apos;{response.Body.GetType().Name}&apos;<sp/>but<sp/>expected<sp/>&apos;{typeof(T).Name}&apos;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(SocketException<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Log.Error(e);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_shared_1_1_data_1_1_service_socket_1a79cc6032e20a1ba2cc01a97a3345cba8" kindref="member">Close</ref>();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LogSendAndReceive(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>requestBody,<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>responseBody,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>clientMillis,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>serverMillis)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Log.Info($</highlight><highlight class="stringliteral">&quot;{requestBody.GetType().Name}<sp/>-&gt;<sp/>{responseBody.GetType().Name}<sp/>(client<sp/>elapsed<sp/>{clientMillis}<sp/>ms)<sp/>(server<sp/>elapsed<sp/>{serverMillis}<sp/>ms))&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="class_shared_1_1_data_1_1_network_exception" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_shared_1_1_data_1_1_network_exception" kindref="compound">NetworkException</ref><sp/>:<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="96" refid="class_shared_1_1_data_1_1_network_exception_1a7d496611e22a994718a8c80bc670a445" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_shared_1_1_data_1_1_network_exception_1a7d496611e22a994718a8c80bc670a445" kindref="member">NetworkException</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">?<sp/>message,<sp/>Exception?<sp/>innerException)<sp/>:<sp/>base(message,<sp/>innerException)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="W:/SEP3/CSharp/Boardgames/Shared/Networking/ServiceSocket.cs"/>
  </compounddef>
</doxygen>
