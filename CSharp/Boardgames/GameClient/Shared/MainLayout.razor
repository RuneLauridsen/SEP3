@using GameClient.DTO
@using GameClient.Services
@using global::Shared
@using global::Shared.Data
@inherits LayoutComponentBase
@inject IAuthService authService;
@inject IGameService gameService;

<PageTitle>GameClient</PageTitle>


<!-- TODO(rune): Kan man slippe for all 100%'erne?   -->
<div style="height: 100vh; overflow: hidden;">

    <NavMenu/>
    <div class="page" style="height: 100%">

        @if (account.AccountId == 0) {
            <main class="container">
                <ErrorBoundary>
                    <ChildContent>
                        @Body
                    </ChildContent>
                    <ErrorContent Context="ex">
                        <!-- TODO(rune): Måske kun developer mode? -->
                        <h1>@ex.Message</h1>
                        <p style="white-space: pre-wrap; font-family: monospace">@ex.ToString()</p>
                    </ErrorContent>
                </ErrorBoundary>
            </main>
        } else {
            <main style="height: 100%;">
                <div class="container-fluid" style="height: 100%;">
                    <div class="row" style="height: 100%;">
                        <div class="col-10 p-5 pt-4" style="overflow: auto; height: 100%;">
                            <ErrorBoundary>
                                <ChildContent>
                                    @Body
                                </ChildContent>
                                <ErrorContent Context="ex">
                                    <!-- TODO(rune): Måske kun developer mode? -->
                                    <h1>@ex.Message</h1>
                                    <p style="white-space: pre-wrap; font-family: monospace">@ex.ToString()</p>
                                </ErrorContent>
                            </ErrorBoundary>
                        </div>
                        <div class="col-2 p-5 pt-4" style="background-color: #2c3034">
                            <h3 style="color: white">Users</h3>
                            <hr style="color: white"/>
                            @foreach (var a in allAccounts)
                            {
                                <!-- TODO(rune): Hvad skal den linke til? -->
                                <p ><a style="text-decoration: none; color: white;" href="/account/@a.AccountId"> @a.Username</a></p>
                            }
                        </div>
                    </div>
                </div>
            </main>
        }

    </div>
</div>

@code
{
    // TODO(rune): Ikke hent alle accounts for hver refresh! Spar miljøet!
    private List<Account> allAccounts = Empty.List<Account>();

    private Account account = Empty.Account();

    protected override void OnInitialized() {
    // TODO(rune): Måske gem brugerens eget Account object globalt,
    // så vi ikke skal hent den hele tiden.
        int accountId = ParseUtil.ParseIntOrDefault(authService.GetClaims().GetOrDefault("userId", ""), 0);
        if (accountId != 0) {
            {
                var req = new GetAccountReq(accountId);
                var res = gameService.GetAccount(req);
                account = res?.account ?? Empty.Account();
            }

            {
                var req = new GetAccountsReq();
                var res = gameService.GetAccounts(req);
                allAccounts = res.accounts;
            }
        }
    }
}
