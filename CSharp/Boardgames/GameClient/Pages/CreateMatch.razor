@page "/creatematch"
@using GameClient.Data
@using GameClient.DTO
@using static GameClient.Data.Messages;
@inject IGameService GameService
@inject IAuthService AuthService
@inject NavigationManager navMgr

<PageTitle>Create match</PageTitle>

@foreach (var game in _availableGames) {
    <h1>@game.Name</h1>
    <div style="width: 400px; height: 300px; background-color: #dddddd;">[indsæt billede her]</div>
    <p>
    <button @onclick="@(e => OnCreateClicked(game))">Create match</button>
    </p>
}

@code {
    private IEnumerable<Game> _availableGames = Enumerable.Empty<Game>();

    protected override Task OnInitializedAsync() {
        var req = new GetGamesRequest(AuthService.GetJwt());
        var res = GameService.GetGames(req);
        _availableGames = res.games;
        return base.OnInitializedAsync();
    }

    private void OnCreateClicked(Game selectedGame) {
        try {
            var req = new CreateMatchRequest(AuthService.GetJwt(), selectedGame.GameId);
            var res = GameService.CreateMatch(req);

            if (res.errorReason == "") {
                navMgr.NavigateTo("/creatematchparticipants/" + res.match.MatchId);
            } else {
                // TODO(rune): Show error reason.
            }
        } catch (NotAuthorizedException) {
            // TODO(rune): Error handling.
        }
    }

}
