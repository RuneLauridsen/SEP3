@inject NavigationManager navMgr
@inject IAuthService authService

@page "/register"
@using GameClient.Services
@using global::Shared.AuthService



<style>
    .card {
        box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
        transition: 0.3s;
        width: 250px;
        padding: 25px;
        text-align: center;
    }

    .field {
        margin-top: 20px;
    }

    .loginbtn {
        background-color:#0dcaf0;
        border-radius: 5px;
        padding: 5px;
        padding-left: 10px;
        padding-right: 10px;
    }

    .loginbtn:hover{
        transform: scale(1.1);
        box-shadow: 0 2px 10px 2px #3f3f3f;
    }
</style>

<div class="card">
    <h3>Please Register</h3>
    <div class="field">
        <label>User name:</label>
        <input type="text" @bind="userName"/>
    </div>
    <div class="field">
        <label>First name:</label>
        <input type="text" @bind="firstName"/>
        <label>Last name:</label>
        <input type="text" @bind="lastName"/>
    </div>
    <div class="field">
        <label>Email:</label>
        <input type="text" @bind="email"/>
    </div>
    <div class="field">
        <label style="text-align: center">Password:</label>
        <input type="password" @bind="password"/>
    </div>
    @if (!string.IsNullOrEmpty(errorLabel))
    {
        <div class="field">
            <label style="color: red">
                @errorLabel
            </label>
        </div>
    }
    <div class="field">
        <button class="loginbtn" @onclick="RegisterAsync">Register</button>
    </div>
</div>
<br/>
<div>
    <h4>Already have an account? click here to log in</h4>
    <button class="loginbtn" @onclick="Login" >Log In</button>
</div>

@code {
    private string userName;
    private string firstName;
    private string lastName;
    private string email;
    private string password;
    private string errorLabel;
    
    
    
    private void Login()
    {
        navMgr.NavigateTo("/LogIn");
    }

    private async Task RegisterAsync()
    {
        try
        {
            //Todo mere validering
            await authService.RegisterAsync(userName, firstName, lastName, email, password);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }

}