@page "/ConfirmRegistrations"
@inject NavigationManager navMgr
@using System.Collections
@using AdminClient.Services
@using GameClient.DTO
@using global::Shared.Data
@using Microsoft.AspNetCore.Mvc
@inject IAdminService adminService

<PageTitle>Applicants for registration:</PageTitle>

<style>
table {
  font-family: arial, sans-serif;
  border-collapse: collapse;
  width: 100%;
}

td, th {
  border: 1px solid #aaaaaa;
  text-align: left;
  padding: 8px;
}

tr:nth-child(even) {
  background-color: #dddddd;
}
</style>

<table>
    <tr>
        <th>Username</th>
        <th>Name</th>
        <th>Email</th>
        <th>Register Date</th>
        <th>Confirm</th>
    </tr>
    @foreach (Account member in applicants)
    {
        <tr>
            <td>@(member.Username)</td>
            <td>@(member.FirstName) @(member.LastName)</td>
            <td>@(member.Email)</td>
            <td>@(member.RegisterDateTime)</td>
            <td>
                <button style="background-color: #84e387" width:5px height:5px @onclick="() => ApplicantAccept(member)">Accept</button>
                <button style="background-color: #f25555" width:5px height:5px @onclick="() => ApplicantReject(member)">Reject</button>
            </td>
        </tr>
    }
</table>


@code {
    AdminService Service;
    List<Account> applicants = new List<Account>();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        applicants.Clear();
        applicants.AddRange(adminService.GetUsersWaitingForApproval());
    }

    private async Task ApplicantAccept(Account account )
    {
        adminService.UpdateUserStatus(account, Account.STATUS_ACCEPTED);
        navMgr.NavigateTo("/ConfirmRegistrations");
        await OnInitializedAsync();
    }
    private async Task ApplicantReject(Account account )
    {
        adminService.UpdateUserStatus(account, Account.STATUS_DELETED);
        navMgr.NavigateTo("/ConfirmRegistrations");
        await OnInitializedAsync();
    }
    
}